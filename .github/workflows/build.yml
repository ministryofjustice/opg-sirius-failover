name: Build & Test
on:
  push:
    branches:
      - main

  pull_request:
    branches:
      - main

defaults:
  run:
    shell: bash

jobs:
  build_and_release:
    name: Build And Release
    runs-on: ubuntu-latest
    outputs:
      tag: ${{ steps.bump_version.outputs.tag }}
    steps:
      - uses: actions/setup-go@v1
        with:
          go-version: 1.14
      - uses: actions/checkout@v1

      - name: Cache GO Dependencies
        uses: actions/cache@v2
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-
      - name: Install modules
        run: |
          go mod download

      - name: Setup gotestsum
        uses: autero1/action-gotestsum@v1.0.0
        with:
          gotestsum_version: 1.6.4
      - run: mkdir -p /tmp/test-results

      - name: Run Tests
        run: |
          gotestsum --junitfile /tmp/test-results/unit-tests.xml -- ./... -coverprofile=/tmp/test-coverage.txt

      - name: Build Sirius Failover
        run: go build -mod vendor ./cmd/failover

      - name: Extract branch name
        run: echo BRANCH_NAME=${{ github.head_ref }} >> $GITHUB_ENV
      
      - uses: actions/checkout@v1
      - name: Bump version and push tag
        uses: anothrNick/github-tag-action@1.36.0
        id: create_tag
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          INITIAL_VERSION: 1.0.0
          DEFAULT_BUMP: minor
          RELEASE_BRANCHES: main
          WITH_V: true
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.create_tag.outputs.new_tag }}
          release_name: ${{ steps.create_tag.outputs.new_tag }}
          draft: false
          prerelease: false
      - name: goreleaser
        uses: goreleaser/goreleaser-action@master
        with:
          args: release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}


  # release:
  #   runs-on: ubuntu-latest
  #   name: Release
  #   needs: test
  #   if: github.ref == 'refs/heads/main' && github.event_name == 'push'
  #   steps:
  #     - uses: actions/checkout@v1
  #       with:
  #         fetch-depth: "0"
  #     - uses: actions/setup-go@v1
  #       with:
  #         go-version: 1.14
        
  #     - name: goreleaser
  #       uses: goreleaser/goreleaser-action@v2
  #       with:
  #         args: release
  #       env:
  #         GITHUB_TOKEN: ${{ secrets.access_token }}
